[color]
  ui = auto
[user]
  email = dean.marano@gmail.com
  name = Dean Marano
  useconfigonly = true
[core]
  editor = vim
  autocrlf = input
  excludesfile = ~/dotfiles/.gitignore_global
[diff]
  tool = vimdiff
[difftool]
  prompt = false
[alias]
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  whip = !"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"WIP\""
  wip = !"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"WIP\""
  unwhip = !"git log -n 1 | grep -q -c WIP && git reset HEAD~1"
  unwip = !"git log -n 1 | grep -q -c WIP && git reset HEAD~1"
  sha = rev-parse HEAD
  fpush = push --force-with-lease
  merged=!"git branch --merged | grep -v \"\\*\" | grep -v \"master\" | grep -v \"develop\" | xargs -n 1 git branch -d && git remote prune origin"
  st = status
  co = checkout
  set-upstream=!"git branch | grep \"*\" | sed \"s/* //\" | awk '{print \"origin/\"$1}' | xargs git branch --set-upstream-to && git pull"

  # Bitbucket
  bucket = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|ssh://git@\\(.*\\):\\(.*\\).git|http://\\1/\\2|\" | sed -e \"s|\\/7999\\/\\([a-z-]*\\)\\/\\([a-z-]*\\)|:7990/projects/\\1/repos/\\2|\")/\""

  # Github
  hub = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/\""
  pulls = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/pulls\""
  pr = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/pull/new/$(git rev-parse --abbrev-ref HEAD)\""
[branch]
  autosetuprebase = always
[push]
  default = current
[credential]
  helper = osxkeychain
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[fetch]
  prune = true
